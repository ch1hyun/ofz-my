{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.66",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n\\nextern const char *http_errno_description(enum http_errno err);\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  const int num_http_errnos = sizeof(enum http_errno) / sizeof(int);\\n  \\n  if (size != 1) {\\n    return 0;\\n  }\\n\\n  if (*data >= num_http_errnos) {\\n    return 0;\\n  }\\n\\n  const char* desc = http_errno_description((enum http_errno)*data);\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.55",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdlib.h>\\n#include <stdint.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < sizeof(int)) {\\n      return 0;\\n  }\\n  \\n  // Extract an integer value from the input data\\n  // and use it as an enum value.\\n  int value = (int)data[0]; /* can be any number 0 through 255 */\\n  enum http_errno errn = value % HPE_UNKNOWN; /* make sure it fits into the enum */\\n  const char * desc = http_errno_description(errn);\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}