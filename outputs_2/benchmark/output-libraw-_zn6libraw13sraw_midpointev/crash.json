{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw13sraw_midpointev",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.79",
        "coverage_diff": "0.00018951187156509734",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    LibRaw RawProcessor;\\n\\n    RawProcessor.imgdata.params.use_auto_wb = 1;\\n    int ret = RawProcessor.open_buffer((void *)data, size);\\n\\n    if (ret != 0)\\n        return 0;\\n\\n    ret = RawProcessor.unpack();\\n    if(ret == LIBRAW_SUCCESS) {\\n       ret = RawProcessor.sraw_midpoint();\\n    }\\n   \\n    RawProcessor.recycle();\\n    \\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw13sraw_midpointev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "5.13",
        "coverage_diff": "0.00021658499607439695",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n#include <cstdlib>\\n\\n#include \"libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  LibRaw RawProcessor;\\n  RawProcessor.open_buffer((void *)data, size);\\n  RawProcessor.unpack();\\n\\n  RawProcessor.sraw_midpoint();\\n\\n  RawProcessor.recycle();\\n  return 0;\\n}",
        "model": ""
    }

    ]
}