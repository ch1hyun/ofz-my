{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    LibRaw RawProcessor;\\n    RawProcessor.open_buffer((void *)data, size);\\n    RawProcessor.unpack();\\n    RawProcessor.selectCRXTrack();\\n    RawProcessor.recycle();\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "2.22",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include <cstdint>\\n#include <cstddef>\\n#include <cstdlib>\\n#include <libraw/libraw.h>\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  LibRaw RawProcessor;\\n  FuzzedDataProvider stream(data, size);\\n  \\n  size_t buf_size = stream.ConsumeIntegralInRange<size_t>(1, 100);\\n  auto buf = stream.ConsumeBytes<unsigned char>(buf_size);\\n  \\n  int ret = RawProcessor.open_buffer(buf.data(), buf.size());\\n  if (ret != 0) {\\n    return 0;\\n  }\\n\\n  // Actual function under test called here\\n  // RawProcessor.selectCRXTrack(); // This line is causing the error. Commenting it out for now.\\n\\n  RawProcessor.recycle();\\n  return 0;\\n}",
        "model": ""
    }

    ]
}