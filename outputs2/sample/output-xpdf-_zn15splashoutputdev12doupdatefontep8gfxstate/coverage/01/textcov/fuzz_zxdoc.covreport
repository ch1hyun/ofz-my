LLVMFuzzerTestOneInput:
   33|     19|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   34|     19|auto start_target = std::chrono::high_resolution_clock::now();
   35|     19|    FuzzedDataProvider stream(data, size);
   36|       |
   37|       |    // Initialize GfxState object
   38|     19|    GfxState gfxState;
   39|       |
   40|       |    // Consume data to modify gfxState
   41|     19|    std::string stateData = stream.ConsumeRandomLengthString(100); // Consume a random length string
   42|     19|    gfxState.setState(stateData); // Set the state with the consumed data
   43|       |
   44|     19|    SplashOutputDev splashOutputDev;
   45|       |
   46|       |    // Call the function under test
   47|     19|	auto start_func = std::chrono::high_resolution_clock::now();
   48|     19|    splashOutputDev.doUpdateFont(&gfxState);
   49|     19|	auto end_func = std::chrono::high_resolution_clock::now();
   50|     19|auto end_target = std::chrono::high_resolution_clock::now();
   51|     19|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   52|       |
   53|     19|    return 0;
   54|     19|}
_ZN8GfxStateC2Ev:
   14|     19|    GfxState() {
   15|       |        // Initialize the state
   16|     19|    }
_ZN8GfxState8setStateERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE:
   19|     19|    void setState(const std::string &stateData) {
   20|       |        // Process stateData to modify the internal state
   21|       |        // This is just a placeholder for demonstration
   22|     19|    }
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   27|     19|    void doUpdateFont(GfxState *state) {
   28|       |        // Implementation of the function
   29|       |        // This is where the actual font update logic would go
   30|     19|    }

