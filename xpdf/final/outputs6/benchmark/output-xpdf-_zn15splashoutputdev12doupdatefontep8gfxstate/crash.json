{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stddef.h>\\n\\n#include \"/src/xpdf-4.05/goo/GString.h\"\\n#include \"splash/SplashBitmap.h\"\\n#include \"splash/SplashOutputDev.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < 1) {\\n    return 0;\\n  }\\n  // Setup\\n  SplashColorMode colorMode = splashModeRGB8;\\n  int bitmapRowPad = 0;\\n  bool reverseVideo = false;\\n  SplashColor color;\\n  for (int i = 0; i < splashMaxColorComps; ++i) {\\n    color[i] = 0;\\n  }\\n  bool bitmapTopDown = true;\\n  SplashBitmap *bitmap = new SplashBitmap(200, 200, bitmapRowPad, colorMode,\\n                                          reverseVideo, bitmapTopDown, color);\\n  SplashOutputDev *splashOut = new SplashOutputDev(colorMode, 4, false, color);\\n  splashOut->startDoc(nullptr);\\n  splashOut->startPage(0, nullptr, nullptr);\\n\\n  // Test\\n  GfxState *state = new GfxState(72.0, 72.0, bitmap->createGfxFont(72.0));\\n  splashOut->doUpdateFont(state);\\n\\n  // Cleanup\\n  delete splashOut;\\n  delete bitmap;\\n  delete state;\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <cstddef>\\n\\n#include \"GfxState.h\"\\n#include \"SplashOutputDev.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    // Initialize a GfxState object\\n    GfxState *state = new GfxState();\\n\\n    // Initialize a SplashOutputDev object\\n    SplashOutputDev *outputDev = new SplashOutputDev();\\n\\n    // Call the doUpdateFont method\\n    outputDev->doUpdateFont(state);\\n\\n    // Clean up\\n    delete state;\\n    delete outputDev;\\n\\n    return 0;\\n}",
        "model": ""
    }

    ]
}