{
    "samples": [

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.77",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include \"/src/http-parser/http_parser.h\"\\n\\n#ifdef __cplusplus\\nextern \"C\" {\\n#endif\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < sizeof(int)) {\\n    return 0;\\n  }\\n  \\n  int num = ((int*)data)[0];\\n\\n  // Ensure the number is in a valid range\\n  enum http_status status = (enum http_status)(num % (HTTP_STATUS_SWITCHING_PROTOCOLS + 1));\\n\\n  const char * response = http_status_str(status);\\n\\n  return 0;\\n}\\n\\n#ifdef __cplusplus\\n}\\n#endif",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.55",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <cstdint>\\n#include <cstdlib>\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size != 1) {\\n    return 0;\\n  }\\n  // enum http_errno only has 47 entries as of version 2.9.4\\n  uint8_t status_code = data[0] % 47;\\n  http_status_str(static_cast<enum http_status>(status_code));\\n  \\n  return 0;\\n}",
        "model": ""
    }

    ]
}