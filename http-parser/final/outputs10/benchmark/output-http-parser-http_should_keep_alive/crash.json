{
    "samples": [

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "8.97",
        "coverage_diff": "0.006918238993710692",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  http_parser parser;\\n  http_parser_settings settings;\\n  http_parser_init(&parser, HTTP_BOTH);\\n  http_parser_settings_init(&settings);\\n\\n  http_parser_execute(&parser, &settings, (const char*)data, size);\\n  \\n  // Call function under test\\n  int result = http_should_keep_alive(&parser);\\n    \\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "20.60",
        "coverage_diff": "0.006918238993710692",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\n// Declare settings\\nhttp_parser_settings settings;\\n\\n// Fuzzing function\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  // Initialize settings\\n  http_parser_settings_init(&settings);\\n\\n  http_parser parser;\\n  http_parser_init(&parser, HTTP_BOTH);\\n  \\n  // Pass the data to the function under test\\n  http_parser_execute(&parser, &settings, (const char *)data, size);\\n\\n  http_should_keep_alive(&parser);\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}