{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if(size < sizeof(enum http_errno)){\\n    return 0;\\n  }\\n\\n  enum http_errno httpErr;\\n  memcpy(&httpErr, data, sizeof(httpErr));\\n  httpErr = httpErr % (HTTP_ERRNO_MAX - 1);\\n  const char * description = http_errno_description(httpErr);\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.77",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <cstdint>\\n#include <cstdlib>\\n\\n// Assuming http_errno_description() is defined in the http_parser.h file\\nextern \"C\" const char* http_errno_description(http_errno err);\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size != sizeof(int)) {\\n    return 0;\\n  }\\n  int http_errno_val = static_cast<int>(*reinterpret_cast<const int*>(data));\\n  if (http_errno_val > 31 || http_errno_val < 0) {\\n    return 0;\\n  }\\n\\n  http_errno err = static_cast<http_errno>(http_errno_val);\\n  const char* httpDescription = http_errno_description(err);\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}