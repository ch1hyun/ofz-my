_ZN6PDFDoc16displayPageSliceEP9OutputDeviddibbbiiiiP34DW_TAG_subroutine_typeInfiniteLoopPv:
   20|     27|void PDFDoc::displayPageSlice(OutputDev *outputDev, int pageIndex, double x1, double y1, int width, GBool render, GBool text, GBool images, int rotate, int quality, int flags1, int flags2, DW_TAG_subroutine_typeInfiniteLoop *loop, void *userData) {
   21|       |    // Implementation of the function (not provided in the original code)
   22|     27|}
LLVMFuzzerTestOneInput:
   24|     27|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   25|     27|auto start_target = std::chrono::high_resolution_clock::now();
   26|     27|    FuzzedDataProvider fuzzed_data(data, size);
   27|       |
   28|       |    // Create an OutputDev instance
   29|     27|    OutputDev outputDev;
   30|       |
   31|       |    // Consume parameters
   32|     27|    int pageIndex = fuzzed_data.ConsumeIntegral<int>();
   33|     27|    double x1 = fuzzed_data.ConsumeFloatingPoint<double>();
   34|     27|    double y1 = fuzzed_data.ConsumeFloatingPoint<double>();
   35|     27|    int width = fuzzed_data.ConsumeIntegral<int>();
   36|     27|    GBool render = fuzzed_data.ConsumeBool();
   37|     27|    GBool text = fuzzed_data.ConsumeBool();
   38|     27|    GBool images = fuzzed_data.ConsumeBool();
   39|     27|    int rotate = fuzzed_data.ConsumeIntegral<int>();
   40|     27|    int quality = fuzzed_data.ConsumeIntegral<int>();
   41|     27|    int flags1 = fuzzed_data.ConsumeIntegral<int>();
   42|     27|    int flags2 = fuzzed_data.ConsumeIntegral<int>();
   43|       |
   44|       |    // Create a DW_TAG_subroutine_typeInfiniteLoop instance
   45|     27|    DW_TAG_subroutine_typeInfiniteLoop loop;
   46|       |
   47|       |    // Create a user data pointer
   48|     27|    std::vector<uint8_t> userDataVector = fuzzed_data.ConsumeRemainingBytes<uint8_t>();
   49|     27|    void *userData = userDataVector.data();
   50|       |
   51|       |    // Call the function under test
   52|     27|	auto start_func = std::chrono::high_resolution_clock::now();
   53|     27|    PDFDoc::displayPageSlice(&outputDev, pageIndex, x1, y1, width, render, text, images, rotate, quality, flags1, flags2, &loop, userData);
   54|     27|	auto end_func = std::chrono::high_resolution_clock::now();
   55|     27|auto end_target = std::chrono::high_resolution_clock::now();
   56|     27|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   57|       |
   58|     27|    return 0;
   59|     27|}

