{
    "samples": [

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "7.26",
        "coverage_diff": "0.0018867924528301887",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n\\n#include <cstdint>\\n#include <cstdio>\\n#include <cstdlib>\\n#include <http_parser.h>\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  FuzzedDataProvider fuzzed_data(data, size);\\n  auto http_status = fuzzed_data.ConsumeIntegralInRange<int>(100, 600);\\n\\n  const char* status_string = http_status_str((enum http_status)http_status);\\n  if (status_string != nullptr) {\\n    printf(\"%s\\\n\", status_string);\\n  }\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "7.07",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  // http_status is enum variable which includes various HTTP status codes.\\n  // Casting some bytes in the input to http_status. \\n  // It is fine that the enum has no matching value for the input as it will return nullptr then.  \\n  enum http_status s;\\n  memcpy(&s, data, size <= sizeof(s) ? size : sizeof(s));\\n  http_status_str(s);\\n  return 0;\\n}",
        "model": ""
    }

    ]
}