{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "True",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "2.21",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\n#ifdef __cplusplus\\nextern \"C\" {\\n#endif\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    if(size==0)\\n        return 0;\\n\\n    http_parser *parser = (http_parser *)malloc(sizeof(http_parser));\\n    http_parser_init(parser, HTTP_REQUEST);\\n\\n    http_parser_execute(parser, NULL, (const char *)data, size);\\n\\n    // Call the test function\\n    const char * description = http_errno_description((enum http_errno)parser->http_errno);\\n\\n    free(parser);\\n\\n    return 0;\\n}\\n\\n#ifdef __cplusplus\\n}\\n#endif",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.77",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include \"http_parser.h\"\\n\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    if (size < sizeof(int)) {\\n        return 0;\\n    }\\n\\n    int http_err = *(int *)data;\\n    if (http_err >= 0 && http_err <= HPE_PAUSED) {\\n        const char * desc = http_errno_description(http_err);\\n    }\\n\\n    return 0;\\n}",
        "model": ""
    }

    ]
}