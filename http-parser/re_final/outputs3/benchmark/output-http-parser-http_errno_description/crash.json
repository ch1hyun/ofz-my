{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "True",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.77",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size != sizeof(int)) {\\n    return 0;\\n  }\\n\\n  int http_error = *((int*)data);\\n\\n  if (http_error >= 0 && http_error <= 44) { // as total http_errno are 44\\n    const char* description = http_errno_description(http_error);\\n  }\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.77",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <string.h>\\n#include \"http_parser.h\"\\n\\n#ifndef HTTP_ERRNO_MAX\\n#define HTTP_ERRNO_MAX 23\\n#endif\\n\\n// Fuzzing function\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n\\n  if(size<sizeof(int))\\n        return 0;\\n\\n  int http_errno_raw;\\n  memcpy(&http_errno_raw, data, sizeof(int));\\n\\n  if(http_errno_raw <0 || http_errno_raw >= HTTP_ERRNO_MAX) // The range of http_errno\\n    return 0;\\n\\n  enum http_errno http_errno = (enum http_errno)(http_errno_raw); \\n  \\n  // Call the function-under-test\\n  const char* err_description = http_errno_description(http_errno);\\n  \\n  return 0;\\n} ",
        "model": ""
    }

    ]
}