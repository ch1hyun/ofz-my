{
    "samples": [

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "7.07",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include \"http_parser.h\"\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size != sizeof(uint16_t))\\n    return 0;\\n\\n  // Treat the input as a 2-byte integer\\n  uint16_t status_enum = *(uint16_t*)data;\\n\\n  // Call the function\\n  const char* status_str = http_status_str((enum http_status)status_enum);\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_status_str",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "1.88",
        "coverage_diff": "0.0018867924528301887",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include \"http_parser.h\"\\n\\nenum DW_TAG_enumeration_typehttp_status {\\n    DW_TAG_HTTP_STATUS_CONTINUE = 100,\\n    DW_TAG_HTTP_STATUS_OK = 200,\\n    DW_TAG_HTTP_STATUS_NO_CONTENT = 204,\\n    DW_TAG_HTTP_STATUS_MULTIPLE_CHOICES = 300,\\n    DW_TAG_HTTP_STATUS_BAD_REQUEST = 400,\\n    DW_TAG_HTTP_STATUS_NOT_FOUND = 404,\\n    DW_TAG_HTTP_STATUS_INTERNAL_SERVER_ERROR = 500,\\n};\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size == 0) {\\n    return 0;\\n  }\\n\\n  enum DW_TAG_enumeration_typehttp_status status = (enum DW_TAG_enumeration_typehttp_status)(data[0] % 500);\\n\\n  const char * status_str = http_status_str(status);\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}