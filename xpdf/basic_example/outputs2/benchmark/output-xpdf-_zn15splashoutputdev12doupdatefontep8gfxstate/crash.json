{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"SplashOutputDev.h\"\\n#include \"GfxState.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\\n    // Initialize GfxState object\\n    GfxState *gfxState = new GfxState();\\n\\n    // Initialize SplashOutputDev object\\n    SplashOutputDev *splashOutputDev = new SplashOutputDev();\\n\\n    // Call the function\\n    splashOutputDev->doUpdateFont(gfxState);\\n\\n    // Cleanup\\n    delete gfxState;\\n    delete splashOutputDev;\\n\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stddef.h>\\n\\n#include \"goo/GooString.h\"\\n#include \"splash/SplashBitmap.h\"\\n#include \"splash/SplashOutputDev.h\"\\n#include \"GlobalParams.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  globalParams = std::make_unique<GlobalParams>();\\n  globalParams->setErrQuiet(false);\\n\\n  GooString *fileName = new GooString(reinterpret_cast<const char*>(data), size);\\n  SplashColor paperColor;\\n  SplashOutputDev *splashOut = new SplashOutputDev(splashModeRGB8, 4, false, paperColor);\\n  splashOut->startDoc(fileName->getCString());\\n\\n  GfxState *state = new GfxState(72.0, 72.0, nullptr, 0, false);\\n  splashOut->doUpdateFont(state);\\n\\n  delete state;\\n  delete splashOut;\\n  delete fileName;\\n  globalParams.reset();\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}