_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   17|      8|    void doUpdateFont(GfxState *gfxState) {
   18|       |        // Function implementation (not provided)
   19|      8|    }
LLVMFuzzerTestOneInput:
   22|      8|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   23|      8|auto start_target = std::chrono::high_resolution_clock::now();
   24|      8|    FuzzedDataProvider stream(data, size);
   25|       |
   26|       |    // Initialize GfxState object
   27|      8|    GfxState gfxState;
   28|       |
   29|       |    // Consume data for GfxState members
   30|      8|    gfxState.some_integer = stream.ConsumeIntegral<int>();
   31|      8|    gfxState.some_float = stream.ConsumeFloatingPoint<float>();
   32|       |
   33|       |    // Consume a string for demonstration purposes
   34|      8|    std::string str = stream.ConsumeBytesAsString(sizeof(gfxState.some_string) - 1);
   35|      8|    std::strncpy(gfxState.some_string, str.c_str(), sizeof(gfxState.some_string) - 1);
   36|      8|    gfxState.some_string[sizeof(gfxState.some_string) - 1] = '\0'; // Ensure null termination
   37|       |
   38|       |    // Call the function under test
   39|      8|	auto start_func = std::chrono::high_resolution_clock::now();
   40|      8|    SplashOutputDev::doUpdateFont(&gfxState);
   41|      8|	auto end_func = std::chrono::high_resolution_clock::now();
   42|      8|auto end_target = std::chrono::high_resolution_clock::now();
   43|      8|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   44|       |
   45|      8|    return 0;
   46|      8|}

