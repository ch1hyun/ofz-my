LLVMFuzzerTestOneInput:
   26|      5|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   27|      5|auto start_target = std::chrono::high_resolution_clock::now();
   28|       |    // Create a FuzzedDataProvider instance
   29|      5|    FuzzedDataProvider fuzzed_data(data, size);
   30|       |
   31|       |    // Initialize GfxState
   32|      5|    GfxState gfxState;
   33|       |
   34|       |    // Consume an integer for font size
   35|      5|    gfxState.fontSize = fuzzed_data.ConsumeIntegral<int>();
   36|       |
   37|       |    // Consume a vector of bytes for font data
   38|      5|    size_t fontDataSize = fuzzed_data.ConsumeIntegralInRange<size_t>(1, 1024); // Ensure at least 1 byte
   39|      5|    gfxState.fontData = fuzzed_data.ConsumeBytes<uint8_t>(fontDataSize);
   40|       |
   41|       |    // Create an instance of SplashOutputDev
   42|      5|    SplashOutputDev splashOutputDev;
   43|       |
   44|       |    // Call the function under test
   45|      5|	auto start_func = std::chrono::high_resolution_clock::now();
   46|      5|    splashOutputDev.doUpdateFont(&gfxState);
   47|      5|	auto end_func = std::chrono::high_resolution_clock::now();
   48|      5|auto end_target = std::chrono::high_resolution_clock::now();
   49|      5|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   50|       |
   51|      5|    return 0;
   52|      5|}
_ZN8GfxStateC2Ev:
   15|      5|    GfxState() : fontSize(0) {}
_ZN15SplashOutputDev12doUpdateFontEP8GfxState:
   21|      5|    void doUpdateFont(GfxState *state) {
   22|       |        // Function implementation
   23|      5|    }

