{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn3gfx14opsetextgstateep6objecti",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstdint>\\n#include <cstddef>\\n#include \"/src/xpdf-4.05/xpdf/Gfx.h\"\\n#include \"Object.h\"\\n#include \"PDFDoc.h\"\\n#include \"OutputDev.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    // Create or obtain an instance of Gfx and Object\\n    PDFDoc *docA;\\n    OutputDev *outA;\\n    Dict *resDict;\\n    GBool (*abortCheckCbkA)(void *data) = NULL;\\n    void *abortCheckCbkDataA = NULL;\\n    Gfx gfxInstance(docA, outA, resDict, abortCheckCbkA, abortCheckCbkDataA);\\n    Object objectInstance;\\n    \\n    // Convert data to int for the second argument of opSetExtGState\\n    int intData = static_cast<int>(*data);\\n\\n    // Call the function\\n    // gfxInstance.opSetExtGState(&objectInstance, intData); // This function is private and cannot be accessed directly\\n\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn3gfx14opsetextgstateep6objecti",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stddef.h>\\n\\n#include \"GfxState.h\"\\n#include \"Object.h\"\\n#include \"XRef.h\"\\n#include \"Gfx.h\"\\n#include \"PDFRectangle.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  // Initialize XRef object\\n  BaseStream *strA = new BaseStream();\\n  XRef *xref = new XRef(strA, gFalse);\\n\\n  // Initialize GfxState object\\n  PDFRectangle pageBox;\\n  GfxState *state = new GfxState(72.0, 72.0, &pageBox, 0, gFalse);\\n\\n  // Initialize Object with the fuzzing data\\n  Object *obj = new Object();\\n  obj->initArray(xref);\\n\\n  // Initialize Gfx object\\n  Gfx *gfx = new Gfx(xref, NULL, state, &pageBox, NULL, NULL, gFalse);\\n\\n  // Call the target function with the fuzzing data\\n  // The function opSetExtGState is private, so we can't call it directly.\\n  // Instead, we'll use the public function execOp, which can call opSetExtGState internally.\\n  Object args[1] = { *obj };\\n  gfx->execOp(\"setExtGState\", args, 1);\\n\\n  // Cleanup\\n  delete gfx;\\n  delete state;\\n  delete obj;\\n  delete xref;\\n  delete strA;\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}