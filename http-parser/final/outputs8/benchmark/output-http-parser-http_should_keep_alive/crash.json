{
    "samples": [

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "6.84",
        "coverage_diff": "0.0037735849056603774",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include \"http_parser.h\"\\n\\nextern int http_should_keep_alive(const http_parser *);\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n\\n  if (size < 1) {\\n    return 0;\\n  }\\n\\n  http_parser *parser = malloc(sizeof(http_parser));\\n\\n  if(parser != NULL) {\\n    http_parser_init(parser, HTTP_REQUEST);\\n\\n    http_parser_settings settings;\\n    memset(&settings, 0, sizeof(http_parser_settings));\\n\\n    http_parser_execute(parser, &settings, (const char *)data, size);\\n  \\n    http_should_keep_alive(parser);\\n  \\n    free(parser);\\n  }\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "7.20",
        "coverage_diff": "0.005660377358490566",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n\\n    http_parser parser;\\n    http_parser_settings settings;\\n    http_parser_init(&parser, HTTP_REQUEST);\\n    http_parser_settings_init(&settings);\\n    http_parser_execute(&parser, &settings, (const char *)data, size);\\n \\n    http_should_keep_alive(&parser);\\n    \\n    return 0;\\n}",
        "model": ""
    }

    ]
}