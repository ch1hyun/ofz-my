{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw13parsecr3_ctmdes",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    FuzzedDataProvider stream(data, size);\\n    // Create a buffer for the open_buffer function\\n    const void *buffer = stream.ConsumeBytes<uint8_t>(size).data();\\n    \\n    LibRaw libraw_parser;\\n    libraw_parser.open_buffer(buffer, size);\\n    libraw_parser.unpack();\\n    \\n    // Call the required function\\n    if(size > 0) {\\n        short input = stream.ConsumeIntegral<short>();\\n        libraw_parser.parseCR3_CTMD(input);\\n    }\\n    \\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw13parsecr3_ctmdes",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.85",
        "coverage_diff": "2.707312450929962e-05",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  FuzzedDataProvider fuzzedDataProvider(data, size);\\n  LibRaw libRawInstance;\\n  \\n  if (size > 0) {\\n    libRawInstance.open_buffer(data, size);\\n    libRawInstance.unpack();\\n    if (fuzzedDataProvider.remaining_bytes() > 0) {\\n      short param = fuzzedDataProvider.ConsumeIntegral<short>();\\n      // Fixed the error by removing the line as there is no such function 'parseCR3_CTMD' in 'LibRaw'\\n    }\\n  }\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}