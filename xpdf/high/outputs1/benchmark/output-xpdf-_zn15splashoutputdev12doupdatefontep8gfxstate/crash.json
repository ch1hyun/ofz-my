{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "The problem statement does not provide any code, therefore it's impossible to provide a solution without knowing the exact code. Please provide the code to proceed.",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n\\n#include <stddef.h>\\n#include <stdint.h>\\n#include <vector>\\n\\n#include \"GlobalParams.h\"\\n#include \"GfxState.h\"\\n#include \"Object.h\"\\n#include \"PDFDoc.h\"\\n#include \"Splash.h\"\\n#include \"SplashBitmap.h\"\\n#include \"SplashOutputDev.h\"\\n#include \"GString.h\"\\n#include \"PDFRectangle.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  FuzzedDataProvider fdp(data, size);\\n\\n  int page_num = fdp.ConsumeIntegral<int>();\\n  double hDPI = fdp.ConsumeFloatingPoint<double>();\\n  double vDPI = fdp.ConsumeFloatingPoint<double>();\\n  int rotate = fdp.ConsumeIntegral<int>();\\n  bool useMediaBox = fdp.ConsumeBool();\\n  bool crop = fdp.ConsumeBool();\\n  bool printing = fdp.ConsumeBool();\\n\\n  GlobalParams *globalParams = new GlobalParams(NULL);\\n  globalParams->setupBaseFonts(NULL);\\n\\n  GString *fileName = new GString(\"dummy.pdf\");\\n  PDFDoc *doc = new PDFDoc(fileName, NULL, NULL, NULL);\\n  \\n\\n  if (doc->isOk()) {\\n\\n    PDFRectangle *mediaBox = NULL;\\n\\n    if (page_num > doc->getNumPages())\\n      page_num = doc->getNumPages();\\n\\n    if (useMediaBox) {\\n      mediaBox = ((PDFRectangle *)doc->getCatalog()->getPage(page_num)->getMediaBox());\\n    }\\n\\n    GfxState *state = new GfxState(hDPI, vDPI, mediaBox, rotate, false);\\n\\n    SplashColor paperColor;\\n    paperColor[0] = 255; // white\\n    paperColor[1] = 255;\\n    paperColor[2] = 255;\\n\\n    SplashOutputDev *splashOut = new SplashOutputDev(splashModeBGR8, 4, false, paperColor);\\n    splashOut->startDoc(doc->getXRef());\\n    splashOut->doUpdateFont(state); // Call the function doUpdateFont\\n    delete splashOut;\\n  }\\n\\n  delete globalParams;\\n  delete doc;\\n  delete fileName;\\n  \\n  return 0;\\n}",
        "model": ""
    }

    ]
}