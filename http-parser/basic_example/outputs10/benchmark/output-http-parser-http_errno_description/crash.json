{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.44",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stddef.h>\\n#include <stdint.h>\\n\\n#include \"http_parser.h\"\\n\\n#define NUM_HTTP_ERRNO_VALUES 23\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    if (size == 0)\\n        return 0;\\n\\n    enum http_errno err = static_cast<enum http_errno>(data[0] % NUM_HTTP_ERRNO_VALUES);\\n    const char* description = http_errno_description(err);\\n\\n    // Add this line to use the description variable to increase code coverage.\\n    if (description != NULL) {\\n        return 0;\\n    }\\n\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "True",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.55",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n\\n#define HTTP_ERRNO_MAX 100\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < sizeof(uint32_t)) {\\n    return 0;\\n  }\\n  uint32_t http_error_no = *(uint32_t *)data;\\n  http_error_no = http_error_no % HTTP_ERRNO_MAX;\\n  http_errno_description((enum http_errno)http_error_no);\\n  return 0;\\n}",
        "model": ""
    }

    ]
}