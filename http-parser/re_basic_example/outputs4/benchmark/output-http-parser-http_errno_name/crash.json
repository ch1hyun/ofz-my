{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_name",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    if (size == 0) {\\n        return 0;\\n    }\\n    // there are 44 enum http_errno values, so we just need the first byte of data to choose one\\n    uint8_t http_err_num = data[0] % 44;\\n    // check if http_err_num is a valid http_errno value\\n    if (http_err_num >= HTTP_ERRNO_MAX) {\\n        // if it is not, set it to a default value that is a valid http_errno value\\n        http_err_num = HPE_OK;\\n    }\\n    const char * http_err_name = http_errno_name((enum http_errno)http_err_num);\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_name",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.55",
        "coverage_diff": "0.0025157232704402514",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\n#define HTTP_ERRNO_MAX 23\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < sizeof(uint32_t)) {\\n    return 0;\\n  }\\n  \\n  uint32_t err_val = *((uint32_t*)data) % HTTP_ERRNO_MAX;\\n  enum http_errno err = (enum http_errno)err_val;\\n  const char* err_name = http_errno_name(err);\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}