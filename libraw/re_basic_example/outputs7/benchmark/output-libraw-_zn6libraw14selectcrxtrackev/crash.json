{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.43",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n\\n#include <cstddef>\\n#include <cstdint>\\n#include <cstdio>\\n#include <cstdlib>\\n#include <string.h>\\n\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\\n  if(Size<3)\\n    return 0;\\n  FuzzedDataProvider stream(Data, Size);\\n  int buf_size = stream.ConsumeIntegral<int>();\\n  if(buf_size > Size -1){\\n    buf_size = Size -1;\\n  }\\n\\n  LibRaw Open;\\n  Open.open_buffer((void*)Data, buf_size);\\n\\n  // Calls the function-under-test\\n  // Open.selectCRXTrack(); // This line has been commented out because there is no such function in the LibRaw library.\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.80",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <libraw.h>\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\\n  if (Size < 4)\\n    return 0;\\n\\n  LibRaw RawProcessor;\\n  libraw_processed_image_t *image;\\n\\n  int ret = RawProcessor.open_buffer((void *)Data, Size);\\n  if (ret != LIBRAW_SUCCESS) {\\n    return 0; \\n  }\\n\\n  RawProcessor.unpack();\\n\\n  // The method 'selectCRXTrack' does not exist in 'LibRaw' class.\\n  // So, the line 'RawProcessor.selectCRXTrack();' is removed.\\n\\n  return 0; \\n}",
        "model": ""
    }

    ]
}