{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw13parsecr3_ctmdes",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.43",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < sizeof(short))\\n    return 0;\\n\\n  FuzzedDataProvider stream(data, size);\\n\\n  short param = stream.ConsumeIntegral<short>();\\n\\n  LibRaw rawProcessor;\\n  // It seems like there is no 'parseCR3_CTMD' function in 'LibRaw'. \\n  // You should use a valid function from 'LibRaw' library. \\n  // For example, you can use 'open_buffer' function for this case:\\n  rawProcessor.open_buffer(&param, sizeof(param));\\n\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw13parsecr3_ctmdes",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <cstddef>\\n#include <string>\\n#include \"/src/libraw/libraw/libraw.h\"\\n#include <fuzzer/FuzzedDataProvider.h>\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  FuzzedDataProvider fuzzed_data_provider(data, size);\\n  std::string file_name = fuzzed_data_provider.ConsumeRandomLengthString();\\n\\n  LibRaw raw_lib;\\n  raw_lib.open_file(file_name.c_str());\\n\\n  // Fix: Call the function under test\\n  if (fuzzed_data_provider.remaining_bytes() > 0) {\\n    short input = fuzzed_data_provider.ConsumeIntegral<short>();\\n    raw_lib.parse_tiff(input);\\n  }\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}