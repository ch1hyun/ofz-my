{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.96",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  FuzzedDataProvider fuzzed_data_provider(data, size);\\n\\n  LibRaw raw_processor;\\n  libraw_processed_image_t *image;\\n  int ret = raw_processor.open_buffer((void *)data, size);\\n  if(ret != LIBRAW_SUCCESS)\\n  {\\n      return 0;\\n  }\\n  \\n  // call the function being fuzzed\\n  // The function 'selectCRXTrack' doesn't exist in LibRaw. \\n  // So, it's needed to call a function that does exist and can be fuzzed.\\n  // For example, let's call 'unpack' function.\\n  raw_processor.unpack();\\n\\n  raw_processor.recycle();\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "5.21",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n#include <stdio.h>\\n\\n#include \"libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    LibRaw RawProcessor;\\n\\n    int ret = RawProcessor.open_buffer((void *)data, size);\\n    if (ret != 0) {\\n        return 0;\\n    }\\n\\n    // The error message indicates that there is no member named 'selectCRXTrack' in 'LibRaw'\\n    // So, we need to comment out or remove the line that calls this function\\n    // RawProcessor.selectCRXTrack(); \\n\\n    RawProcessor.recycle();\\n    return 0;\\n}",
        "model": ""
    }

    ]
}