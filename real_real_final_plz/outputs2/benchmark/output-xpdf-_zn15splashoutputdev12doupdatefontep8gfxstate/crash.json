{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "triage": "-",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"GfxState.h\"\\n#include \"Gfx.h\"\\n#include \"Object.h\"\\n#include \"Dict.h\"\\n#include \"Stream.h\"\\n#include \"SplashOutputDev.h\"\\n\\n// Include necessary headers for types used in OutputDev.h\\n#include \"XRef.h\"\\n#include \"Catalog.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    FuzzedDataProvider stream(data, size);\\n\\n    // Initialize GfxState pointer (cannot be NULL)\\n    GfxState gfxState(0, 0, nullptr, 0, gFalse);\\n\\n    // Call the function-under-test\\n    SplashOutputDev splashOutputDev(splashModeRGB8, 0, gFalse, nullptr, nullptr, gTrue);\\n\\n    // Manually calling the private function for testing purposes\\n    gfxState.setFont(nullptr, 0.0);\\n\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn15splashoutputdev12doupdatefontep8gfxstate",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "triage": "-",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/xpdf-4.05/xpdf/SplashOutputDev.h\"\\n#include \"/src/xpdf-4.05/xpdf/GfxState.h\"\\n#include \"/src/xpdf-4.05/xpdf/OutputDev.h\"\\n#include \"/src/xpdf-4.05/goo/gtypes.h\"\\n#include \"/src/xpdf-4.05/goo/GooHash.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    // Initialize Fuzzed Data Provider\\n    FuzzedDataProvider stream(data, size);\\n\\n    // Create a dummy GfxState object\\n    GfxState *gfxState = new GfxState(0, 0, nullptr, 0, gFalse);\\n\\n    // Call the function-under-test with the initialized GfxState object\\n    SplashOutputDev splashOutputDev;\\n    splashOutputDev.doUpdateFont(gfxState);\\n\\n    // Clean up\\n    delete gfxState;\\n\\n    return 0;\\n}",
        "model": ""
    }

    ]
}