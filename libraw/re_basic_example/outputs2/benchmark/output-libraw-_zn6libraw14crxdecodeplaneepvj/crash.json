{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14crxdecodeplaneepvj",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n#include <fuzzer/FuzzedDataProvider.h>\\n#include \"libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  FuzzedDataProvider stream(data, size);\\n  const uint32_t planeSize = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t planeOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t planeCount = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t imageFlags = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlane = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanes = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mUncroppedImageHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mUncroppedImageWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRow = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mTileWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mTileHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mTileBorder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mSubbandWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mSubbandHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mKnots = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mBits = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mMSB = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mCurLine = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mCurPlane = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mLineBuf = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mOutput = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneBuf = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowStart = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowEnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneStart = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneEnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageStart = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageEnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mUncroppedImage = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImage = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowBorder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneBorder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageBorder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowThreads = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneThreads = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageThreads = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowQueue = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneQueue = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageQueue = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCache = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCache = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCache = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowContext = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneContext = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageContext = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSize = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSize = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSize = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageOffset = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowShift = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneShift = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageShift = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFactor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFactor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFactor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLimit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLimit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLimit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPad = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePad = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePad = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAlign = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAlign = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAlign = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowOrder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneOrder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageOrder = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAccess = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAccess = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAccess = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMap = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMap = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMap = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSem = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSem = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSem = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLock = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLock = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLock = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowEvent = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneEvent = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageEvent = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCond = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCond = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCond = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAttr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAttr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAttr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFlags = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFlags = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFlags = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowState = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneState = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageState = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowError = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneError = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageError = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowProfile = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneProfile = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageProfile = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAlloc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAlloc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAlloc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFree = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFree = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFree = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowImport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneImport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageImport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowExport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneExport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageExport = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCopy = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCopy = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCopy = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHost = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHost = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHost = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowDevice = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneDevice = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageDevice = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowArray = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneArray = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageArray = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPointer = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePointer = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePointer = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowReference = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneReference = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageReference = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHandle = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHandle = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHandle = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFilter = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFilter = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFilter = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSampler = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSampler = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSampler = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowBorderMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneBorderMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageBorderMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAddressMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAddressMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAddressMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowReadMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneReadMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageReadMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowWriteMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneWriteMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageWriteMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowComputeMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneComputeMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageComputeMode = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowInterop = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneInterop = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageInterop = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowView = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneView = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageView = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowResource = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneResource = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageResource = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowType = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneType = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageType = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLevels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLevels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLevels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowChannels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneChannels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageChannels = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHeight = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageWidth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowDepth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneDepth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageDepth = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowElements = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneElements = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageElements = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPacking = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePacking = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePacking = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowOrdering = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneOrdering = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageOrdering = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPlane = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePlane = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePlane = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPlanes = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePlanes = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePlanes = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePitch = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowRoll = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneRoll = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageRoll = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowInc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneInc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageInc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowJump = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneJump = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageJump = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLut = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLut = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLut = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowTransform = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneTransform = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageTransform = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowConvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneConvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageConvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowScale = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneScale = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageScale = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowScan = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneScan = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageScan = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPrint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePrint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePrint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHash = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHash = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHash = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowTic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneTic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageTic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowToc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneToc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageToc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowGet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneGet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageGet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAdd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAdd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAdd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSub = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSub = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSub = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMul = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMul = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMul = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowDiv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneDiv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageDiv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAnd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowOr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneOr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageOr = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowXor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneXor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageXor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPow = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePow = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePow = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAbs = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAbs = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAbs = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMax = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMax = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMax = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowInvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneInvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageInvert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFloor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFloor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFloor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowRound = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneRound = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageRound = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCeil = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCeil = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCeil = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowTrunc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneTrunc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageTrunc = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowRint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneRint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageRint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowNearbyint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneNearbyint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageNearbyint = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowTranspose = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneTranspose = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageTranspose = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFlip = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFlip = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFlip = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLerp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLerp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLerp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCubic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCubic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCubic = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMadd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMadd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMadd = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLuma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLuma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLuma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowContrast = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneContrast = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageContrast = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowGamma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneGamma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageGamma = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowGammaInv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneGammaInv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageGammaInv = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowLookup = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneLookup = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageLookup = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPolar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePolar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePolar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCartesian = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCartesian = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCartesian = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowPhase = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlanePhase = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImagePhase = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowConj = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneConj = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageConj = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowReal = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneReal = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageReal = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowImag = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneImag = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageImag = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAmp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAmp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAmp = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSplit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSplit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSplit = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowMerge = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneMerge = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageMerge = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowExtract = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneExtract = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageExtract = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowInsert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneInsert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageInsert = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowDelete = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneDelete = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageDelete = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowAppend = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneAppend = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageAppend = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCount = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCount = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageCount = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSort = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSort = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSort = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowRank = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneRank = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageRank = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowDft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneDft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageDft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowIdft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneIdft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageIdft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowFft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneFft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageFft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowIfft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneIfft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageIfft = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowIhadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneIhadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageIhadamard = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowWalsh = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneWalsh = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageWalsh = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowHaar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneHaar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageHaar = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowWavelet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneWavelet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageWavelet = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowColor2 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneColor2 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageColor2 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowColor3 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneColor3 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageColor3 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowColor4 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneColor4 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageColor4 = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowColor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneColor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageColor = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowArg = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneArg = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageArg = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowSin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneSin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mImageSin = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mRowCos = stream.ConsumeIntegral<uint32_t>();\\n  const uint32_t mPlaneCos = stream.ConsumeIntegral<uint",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14crxdecodeplaneepvj",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "The error message is not provided in the problem statement, so it's impossible to provide a specific solution. However, the provided code seems to be correct assuming that the included libraries and the paths to them are correct. \\n\\nIf there was an error, it might be related to the paths of the included libraries, specifically \"fuzzer/FuzzedDataProvider.h\" and \"/src/libraw/libraw/libraw.h\". The paths should be adjusted according to the actual locations of these files in your project directory.\\n\\nAnother possible issue could be the \"crxDecodePlane\" function. This function is not defined in the LibRaw public API, so if it's a private or protected method, you won't be able to call it from the derived class. If this is the case, you'll need to find another way to achieve your goal, possibly by calling a public method of the LibRaw class that internally calls \"crxDecodePlane\".\\n\\nWithout a specific error message, it's impossible to provide a more detailed solution.",
        "model": ""
    }

    ]
}