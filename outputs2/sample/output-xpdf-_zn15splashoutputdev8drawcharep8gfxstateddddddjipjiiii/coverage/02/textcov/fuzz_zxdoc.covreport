LLVMFuzzerTestOneInput:
   23|     36|extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
   24|     36|auto start_target = std::chrono::high_resolution_clock::now();
   25|     36|    FuzzedDataProvider fuzzed_data(data, size);
   26|       |
   27|       |    // Create a GfxState object
   28|     36|    GfxState gfx_state;
   29|       |
   30|       |    // Consume doubles for the position and other parameters
   31|     36|    double param1 = fuzzed_data.ConsumeFloatingPoint<double>();
   32|     36|    double param2 = fuzzed_data.ConsumeFloatingPoint<double>();
   33|     36|    double param3 = fuzzed_data.ConsumeFloatingPoint<double>();
   34|     36|    double param4 = fuzzed_data.ConsumeFloatingPoint<double>();
   35|     36|    double param5 = fuzzed_data.ConsumeFloatingPoint<double>();
   36|     36|    double param6 = fuzzed_data.ConsumeFloatingPoint<double>();
   37|       |
   38|       |    // Consume CharCode
   39|     36|    CharCode char_code = fuzzed_data.ConsumeIntegral<CharCode>();
   40|       |
   41|       |    // Consume an integer
   42|     36|    int int_param = fuzzed_data.ConsumeIntegral<int>();
   43|       |
   44|       |    // Create a Unicode object
   45|     36|    Unicode unicode_obj;
   46|       |
   47|       |    // Consume another integer
   48|     36|    int another_int_param = fuzzed_data.ConsumeIntegral<int>();
   49|       |
   50|       |    // Consume three boolean values
   51|     36|    GBool bool_param1 = fuzzed_data.ConsumeBool();
   52|     36|    GBool bool_param2 = fuzzed_data.ConsumeBool();
   53|     36|    GBool bool_param3 = fuzzed_data.ConsumeBool();
   54|       |
   55|       |    // Call the function-under-test
   56|     36|	auto start_func = std::chrono::high_resolution_clock::now();
   57|     36|    SplashOutputDev::drawChar(&gfx_state, param1, param2, param3, param4, param5, param6, char_code, int_param, &unicode_obj, another_int_param, bool_param1, bool_param2, bool_param3);
   58|     36|	auto end_func = std::chrono::high_resolution_clock::now();
   59|     36|auto end_target = std::chrono::high_resolution_clock::now();
   60|     36|std::cout<<"Target runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_target-start_target).count()<<", Function runtime : "<<std::chrono::duration_cast<std::chrono::nanoseconds>(end_func - start_func).count()<<std::endl;
   61|       |
   62|     36|    return 0;
   63|     36|}
_ZN15SplashOutputDev8drawCharEP8GfxStateddddddjiP7Unicodeibbb:
   18|     36|    static void drawChar(GfxState *, double, double, double, double, double, double, CharCode, int, Unicode *, int, GBool, GBool, GBool) {
   19|       |        // Implementation can be empty or minimal for fuzzing
   20|     36|    }

