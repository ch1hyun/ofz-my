{
    "samples": [

    {
        "benchmark": "output-cmake-xmlinitunknownencoding",
        "sample": "01",
        "status": "Running",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stddef.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nextern \"C\" {\\n#include \"/src/CMake/Utilities/cmexpat/lib/xmltok.h\"\\n}\\n#include \"FuzzedDataProvider.h\"\\n\\n// Dummy function that does nothing.\\nint Converter(void* /*unused*/, const char* /*unused*/,\\n                             char* /*unused*/, int /*unused*/) {\\n  return 0;\\n}\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  FuzzedDataProvider stream(data, size);\\n\\n  const size_t kArraySize = 256;\\n  int array[kArraySize] = {};\\n  while (stream.remaining_bytes() != 0) {\\n    const size_t i = stream.ConsumeIntegralInRange<size_t>(0, kArraySize - 1);\\n    const int v = stream.ConsumeIntegral<int>();\\n    array[i] = v;\\n  }\\n\\n  ENCODING * result_encoding = XmlInitUnknownEncoding(NULL, array, Converter, NULL);\\n\\n  if (result_encoding != NULL) {\\n    free(result_encoding);\\n  }\\n  \\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-cmake-xmlinitunknownencoding",
        "sample": "02",
        "status": "Running",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n\\nextern \"C\" {\\n#include \"/src/CMake/Utilities/cmexpat/lib/expat.h\"\\n}\\n\\nextern \"C\" {\\n\\nENCODING * ConvertEncoding(void *data, const char *s) {\\n  return XmlInitUnknownEncoding(data, 0, 0, 0);\\n}\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size < 1)\\n    return 0;\\n\\n  // Consume 1 byte to determine if encoding conversion should be carried out\\n  bool should_convert_encoding = data[0] & 1;\\n  data++;\\n  size--;\\n\\n  if (should_convert_encoding) {\\n    ConvertEncoding(NULL, NULL);\\n  }\\n  \\n  return 0;\\n}\\n}",
        "model": ""
    }

    ]
}