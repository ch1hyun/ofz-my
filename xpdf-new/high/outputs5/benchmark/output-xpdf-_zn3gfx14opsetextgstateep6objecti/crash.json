{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn3gfx14opsetextgstateep6objecti",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stddef.h>\\n#include <stdint.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include \"/src/xpdf-4.05/xpdf/GfxState.h\"\\n#include \"/src/xpdf-4.05/xpdf/Object.h\"\\n#include <poppler/Stream.h>\\n\\nclass Gfx {\\npublic:\\n    Gfx(XRef *xrefA, OutputDev *outA, int pageNum, Dict *resDict,\\n        double hDPI, double vDPI, PDFRectangle *box,\\n        PDFRectangle *cropBox, int rotate,\\n        bool (*abortCheckCbk)(void *data) = NULL,\\n        void *abortCheckCbkData = NULL,\\n        bool (*annotDisplayDecideCbk)(Annot *annot, void *user_data) = NULL,\\n        void *annotDisplayDecideCbkData = NULL);\\n    void opSetExtGState(Object *args, int numArgs);\\n};\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    if (size < 3) {\\n        return 0;\\n    }\\n    Object obj;\\n    obj.initNull();\\n    Gfx gfx(NULL, NULL, 0, NULL, 0, 0, NULL, NULL, 0);\\n    gfx.opSetExtGState(&obj, size);\\n    return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn3gfx14opsetextgstateep6objecti",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"Object.h\"\\n#include \"/src/xpdf-4.05/xpdf/Gfx.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\\n  if (Size < 1) {\\n    return 0;\\n  }\\n\\n  FuzzedDataProvider fuzzed_data_provider(Data, Size);\\n  Object obj;\\n  int i = fuzzed_data_provider.ConsumeIntegral<int>();\\n  Gfx gfx;\\n\\n  gfx.opSetExtGState(&obj, i);\\n  \\n  return 0;\\n}",
        "model": ""
    }

    ]
}