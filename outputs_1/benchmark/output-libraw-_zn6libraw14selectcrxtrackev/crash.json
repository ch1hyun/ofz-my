{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.75",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  // Create an instance of `LibRaw`\\n  LibRaw libraw = LibRaw();\\n  \\n  // Open the image\\n  int ret = libraw.open_buffer(data, size);\\n  if (ret != 0) { // Check if the image is opened successfully\\n    return 0;\\n  }\\n  \\n  // Unpack the image\\n  libraw.unpack();\\n\\n  // The 'selectCRXTrack' function does not exist in the 'LibRaw' class.\\n  // Therefore, it is removed from the code.\\n  \\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.65",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  FuzzedDataProvider fuzzed_data(data, size);\\n\\n  // Initialize LibRaw instance\\n  LibRaw raw_processor;\\n  raw_processor.imgdata.params.use_camera_wb = 1;\\n\\n  // Load data into buffer\\n  std::vector<uint8_t> buffer = fuzzed_data.ConsumeRemainingBytes<uint8_t>();\\n\\n  // Open and unpack the image\\n  if (raw_processor.open_buffer(buffer.data(), buffer.size()) != LIBRAW_SUCCESS) {\\n    return 0;\\n  }\\n\\n  // The function selectCRXTrack() does not exist in the LibRaw class, so it has been removed from the code.\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}