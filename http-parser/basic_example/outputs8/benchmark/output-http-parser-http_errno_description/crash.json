{
    "samples": [

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stdlib.h>\\n#include \"http_parser.h\"\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  if (size == 0) {\\n    return 0;\\n  }\\n\\n  const enum http_errno err_num = ((int)data[0]) % HTTP_ERRNO_MAX;\\n  if(err_num < 0 || err_num >= HTTP_ERRNO_MAX) {\\n    return 0;\\n  }\\n  const char *error_desc = http_errno_description(err_num);\\n  \\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_errno_description",
        "sample": "02",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdlib.h>\\n#include <stdint.h>\\n\\n#ifdef __cplusplus\\nextern \"C\" {\\n#endif\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\\n{\\n  if (size == 0)\\n  {\\n    return 0;\\n  }\\n\\n  // Use the first byte of our data to select an error code\\n  enum http_errno err = (enum http_errno)(data[0] % HTTP_ERRNO_MAX);\\n\\n  // Call the function-under-test\\n  const char *description = http_errno_description(err);\\n\\n  return 0;\\n}\\n\\n#ifdef __cplusplus\\n}\\n#endif\\nThe error was due to the use of an undeclared identifier '_HTTP_ERRNO_H'. The correct identifier to use is 'HTTP_ERRNO_MAX'. This identifier is defined in the 'http_parser.h' header file and represents the maximum value for the 'http_errno' enumeration.",
        "model": ""
    }

    ]
}