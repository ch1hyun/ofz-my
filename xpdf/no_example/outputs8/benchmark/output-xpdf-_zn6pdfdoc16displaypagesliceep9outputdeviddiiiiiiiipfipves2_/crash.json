{
    "samples": [

    {
        "benchmark": "output-xpdf-_zn6pdfdoc16displaypagesliceep9outputdeviddiiiiiiiipfipves2_",
        "sample": "01",
        "status": "Done",
        "compiles": "False",
        "crashes": "False",
        "crash_reason": "-",
        "bug": "True",
        "coverage": "0.00",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stdint.h>\\n#include <stddef.h>\\n\\n#include \"goo/GooString.h\"\\n#include \"poppler/PDFDoc.h\"\\n#include \"poppler/OutputDev.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  GooString *fileName = new GooString((const char *)data, size);\\n  PDFDoc *doc = new PDFDoc(fileName, nullptr, nullptr, nullptr);\\n  if (!doc->isOk()) {\\n    delete doc;\\n    delete fileName;\\n    return 0;\\n  }\\n\\n  // Create an instance of OutputDev or a derived class\\n  OutputDev *outputDev = new OutputDev();\\n\\n  // Call the function with appropriate parameters\\n  doc->displayPageSlice(outputDev, 1, 72.0, 72.0, 0, gTrue, gTrue, gTrue, 0, 0, 0, 0, nullptr, nullptr);\\n\\n  delete doc;\\n  delete fileName;\\n  delete outputDev;\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-xpdf-_zn6pdfdoc16displaypagesliceep9outputdeviddiiiiiiiipfipves2_",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "0.87",
        "coverage_diff": "8.017253128733033e-06",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n\\n#include <aconf.h>\\n#include <png.h>\\n#include <stddef.h>\\n#include <stdint.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <vector>\\n\\n#include \"GString.h\"\\n#include \"GlobalParams.h\"\\n#include \"JBIG2Stream.h\"\\n#include \"Object.h\"\\n#include \"PDFDoc.h\"\\n#include \"Splash.h\"\\n#include \"SplashBitmap.h\"\\n#include \"SplashOutputDev.h\"\\n#include \"Stream.h\"\\n#include \"config.h\"\\n#include \"gfile.h\"\\n#include \"gmem.h\"\\n#include \"gmempp.h\"\\n#include \"parseargs.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  FuzzedDataProvider fdp(data, size);\\n  double hDPI = fdp.ConsumeFloatingPoint<double>();\\n  double vDPI = fdp.ConsumeFloatingPoint<double>();\\n  int rotate = fdp.ConsumeIntegral<int>();\\n  bool useMediaBox = fdp.ConsumeBool();\\n  bool crop = fdp.ConsumeBool();\\n  bool printing = fdp.ConsumeBool();\\n  int sliceX = fdp.ConsumeIntegral<int>();\\n  int sliceY = fdp.ConsumeIntegral<int>();\\n  int sliceW = fdp.ConsumeIntegral<int>();\\n  int sliceH = fdp.ConsumeIntegral<int>();\\n\\n  int pageNum = fdp.ConsumeIntegral<int>();\\n  std::vector<char> payload = fdp.ConsumeRemainingBytes<char>();\\n\\n  Object xpdf_obj;\\n  xpdf_obj.initNull();\\n  BaseStream *stream = new MemStream(payload.data(), 0, payload.size(), &xpdf_obj);\\n  \\n  globalParams = new GlobalParams(NULL);\\n  globalParams->setErrQuiet(1);\\n  globalParams->setupBaseFonts(NULL);\\n  char yes[] = \"yes\";\\n  globalParams->setEnableFreeType(yes); // Yes, it's a string and not a bool.\\n  globalParams->setErrQuiet(1);\\n\\n  PDFDoc *doc = new PDFDoc(stream);\\n\\n  if (doc->isOk() == gTrue) {\\n    SplashColor paperColor = {0xff, 0xff, 0xff};\\n    SplashOutputDev *splashOut = new SplashOutputDev(splashModeRGB8, 4, 0, paperColor, true);\\n\\n    splashOut->startDoc(doc->getXRef());\\n\\n    doc->displayPageSlice(splashOut, pageNum, hDPI, vDPI, rotate, crop, crop, crop, sliceX, sliceY, sliceW, sliceH, NULL, NULL);\\n\\n    delete splashOut;\\n  }\\n\\n  delete doc;\\n  delete globalParams;\\n\\n  return 0;\\n}",
        "model": ""
    }

    ]
}