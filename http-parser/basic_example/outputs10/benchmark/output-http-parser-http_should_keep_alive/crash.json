{
    "samples": [

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "1.66",
        "coverage_diff": "0.005031446540880503",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <stddef.h>\\n#include <stdint.h>\\n#include <stdlib.h>\\n#include \"http_parser.h\"\\n\\n#ifdef __cplusplus\\nextern \"C\" {\\n#endif\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    http_parser parser;\\n    http_parser_init(&parser, HTTP_BOTH);\\n    if(size==0)\\n        return 0;\\n    \\n    uint8_t type=data[0]%3;\\n    parser.http_major = data[0];\\n    parser.http_minor = data[0];\\n    parser.flags = data[0];\\n    parser.status_code = ((uint16_t)rand() % (uint16_t)(-1));\\n    parser.method = data[0]%87;\\n    parser.http_errno = data[0]%53;\\n    parser.upgrade = data[0]%2;\\n    http_should_keep_alive(&parser);\\n    return 0;\\n}\\n\\n#ifdef __cplusplus\\n}\\n#endif",
        "model": ""
    },

    {
        "benchmark": "output-http-parser-http_should_keep_alive",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "True",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "2.10",
        "coverage_diff": "0.0037735849056603774",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include \"http_parser.h\"\\n#include <stdint.h>\\n#include <stdlib.h>\\n\\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n    http_parser parser;\\n    http_parser_init(&parser, HTTP_BOTH);\\n    http_parser_execute(&parser, NULL, (char *)data, size);\\n    http_should_keep_alive(&parser);\\n    return 0;\\n}",
        "model": ""
    }

    ]
}