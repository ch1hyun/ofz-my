{
    "samples": [

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "01",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.78",
        "coverage_diff": "2.707312450929962e-05",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <cstddef>\\n#include <cstdint>\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\\n  LibRaw libRawInstance;\\n  libRawInstance.open_buffer(data, size);\\n  libRawInstance.unpack();\\n  // libRawInstance.selectCRXTrack(); // Removed the function call as it's not a member of 'LibRaw'\\n  return 0;\\n}",
        "model": ""
    },

    {
        "benchmark": "output-libraw-_zn6libraw14selectcrxtrackev",
        "sample": "02",
        "status": "Done",
        "compiles": "True",
        "crashes": "False",
        "crash_reason": "NO_SEMANTIC_ERR",
        "bug": "True",
        "coverage": "4.70",
        "coverage_diff": "0.0",
        "coverage_report": "#",
        "stacktrace": "/stacktrace",
        "target_binary": "/target_binary",
        "reproducer": "/artifacts",
        "run_log": "run.log",
        "source_code": "#include <fuzzer/FuzzedDataProvider.h>\\n\\n#include <cstddef>\\n#include <cstdint>\\n\\n#include \"/src/libraw/libraw/libraw.h\"\\n\\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\\n  int ret;\\n  LibRaw libRawProcessor;\\n\\n  if (LIBRAW_SUCCESS != (ret = libRawProcessor.open_buffer((void*)data, size))) {\\n    return 0;  // Cannot parse image data.\\n  }\\n\\n  if (LIBRAW_SUCCESS != (ret = libRawProcessor.unpack())) {\\n    return 0;  // Cannot unpack thumb.\\n  }\\n\\n  if (LIBRAW_SUCCESS != (ret = libRawProcessor.unpack_thumb())) {\\n    return 0;  // Cannot unpack image.\\n  }\\n\\n  // libRawProcessor.selectCRXTrack();  // Call to function under test - commented out as it does not exist\\n\\n  libRawProcessor.recycle();\\n  return 0;\\n}",
        "model": ""
    }

    ]
}